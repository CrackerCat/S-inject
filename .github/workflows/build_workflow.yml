name: Windows Build and Release

on:
  push:
    tags:
      - 'v*' # This workflow will run when a tag starting with 'v' is pushed

env:
  BUILD_TYPE: Release
  VERSION_BASE: "2.3" # Starting version number
  OUTPUT_DIR: "build_output"

jobs:
  build:
    name: Build Windows Executable
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get version from tag or use base version
      id: version
      run: |
        # If tag exists (format vX.Y.Z), use it, otherwise use VERSION_BASE
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$VERSION_BASE.${GITHUB_RUN_NUMBER}
        fi
        echo "Version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install NASM (for ASM support)
      run: choco install nasm -y

    - name: Set up CMake
      uses: cmake-actions/setup-cmake@v1

    - name: Create build directory
      run: mkdir build

    - name: Configure with CMake
      working-directory: ./build
      run: cmake .. -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVERSION=${{ steps.version.outputs.version }}

    - name: Build with CMake
      working-directory: ./build
      run: cmake --build . --config ${{ env.BUILD_TYPE }}

    - name: Create output directory
      run: mkdir -p ${{ env.OUTPUT_DIR }}

    - name: Copy artifacts
      run: |
        # Copy all built executables and DLLs to output directory
        copy build\${{ env.BUILD_TYPE }}\*.exe ${{ env.OUTPUT_DIR }}
        copy build\${{ env.BUILD_TYPE }}\*.dll ${{ env.OUTPUT_DIR }} 2>nul || exit 0

    - name: Zip artifacts
      run: |
        7z a -tzip ${{ env.OUTPUT_DIR }}/release_v${{ steps.version.outputs.version }}.zip ${{ env.OUTPUT_DIR }}\*.*
        echo "ZIP_PATH=${{ env.OUTPUT_DIR }}/release_v${{ steps.version.outputs.version }}.zip" >> $GITHUB_ENV

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build-v${{ steps.version.outputs.version }}
        path: ${{ env.OUTPUT_DIR }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-build-v${{ needs.build.outputs.version }}

    - name: Get version
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          Windows build of version ${{ steps.version.outputs.version }}
          - Built with CMake
          - Includes C/C++ and ASM components
        files: release_v${{ steps.version.outputs.version }}.zip